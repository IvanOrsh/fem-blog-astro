---
import { fetchArticles } from "@lib/fetchArticles";

interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// TODO: error handling!
const featuredArticles = await fetchArticles({ count: 1, featured: true });

let articleTitle: string | undefined;
let articleContent: string | undefined;
let articleSlug: string | undefined;
if (featuredArticles.length > 0) {
  articleTitle = featuredArticles.at(0)?.data.tutorialTitle;
  articleContent = featuredArticles.at(0)?.data.content;
  articleSlug = featuredArticles.at(0)?.data.text;
}
---

{
  featuredArticles.length > 0 && (
    <div class:list={["featured-article-container", className]}>
      <h2 class="visually-hidden">Featued article</h2>
      <article>
        <img src="/images/image-web-3-desktop.jpg" alt="" />
        <h3>{articleTitle}</h3>
        <div class="flow">
          <p>{articleContent}</p>
          <a href={`/article/${articleSlug}`} class="button">
            Read More{" "}
            <span class="visually-hidden">
              about The Bright Future of Web 3.0
            </span>
          </a>
        </div>
      </article>
    </div>
  )
}

<style>
  .featured-article-container {
    container-type: inline-size;
  }

  article {
    display: grid;
    gap: 1rem;

    @container (width > calc(25ch * 2)) {
      gap: 2rem 1rem;
      grid-template-columns: repeat(2, 1fr);
    }
  }

  img {
    grid-column: 1 / -1;
  }

  h3 {
    font-size: var(--fs-900);
  }
</style>
